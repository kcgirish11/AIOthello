#Travelling Salesman
#Kiran Girish 
import sys, math, random, time, cv2
import numpy as np
distanceDict = {}
startTime = time.clock()

file = open("tsp0734.txt", "r")
#reads In the file
def createDistanceDict(pointList, pointDict): 
	global distanceDict
	for num in range(len(pointList)): 
		for num2 in range(len(pointList)):
			firstPoint = pointList[num]
			secondPoint = pointList[num2]
			(x1, y1) = pointDict[firstPoint]
			(x2, y2) = pointDict[secondPoint]
			edgeDist = math.sqrt(((x1-x2)*(x1-x2)) + ((y1 - y2)*(y1-y2)))
			distanceDict[(firstPoint, secondPoint)] = edgeDist
			distanceDict[(secondPoint, firstPoint)] = edgeDist



def readList(): 
	pointDict = {}
	pointList  = []
	numLines = int(file.readline())
	for l in range(numLines): 
		string = file.readline()
		XY = string.split()
		(x, y) = (float(XY[0]), float(XY[1]))
		pointDict[l+1] = (x, y)
		pointList.append(l+1)
	createDistanceDict(pointList, pointDict)
	return (pointList, pointDict)

#calculate cost of the entire tour 
def calculateDistance(pointList, pointDict): 
	global distanceDict
	totalDist = 0 
	for num in range(len(pointList)): 
		if num < len(pointList) - 1: 
			curPoint = pointList[num]
			nextPoint = pointList[num+1]
		else: 
			curPoint = pointList[num]
			nextPoint = pointList[0]
		edgeD = distanceDict[(curPoint, nextPoint)]
		totalDist += edgeD
	#print (totalDist)
	return totalDist

#swap in the list 
def swap(pointList, pointDict):
	global distanceDict
	#print (distanceDict)
	curDist = calculateDistance(pointList, pointDict)
	curList = pointList[:]
	swapCount = 0
	for first in range(len(pointList)): 
		for sec in range(first+1,len(pointList)): 
			tempList = pointList[:]
			temp = tempList[first]
			tempList[first] = tempList[sec]
			tempList[sec] = temp
			dist = calculateDistance(tempList, pointDict)
			#print ("dist", dist)

			if dist < curDist: 
				swapCount += 1
				#print ("here")
				curDist = dist
				curList = tempList[:]
				return (curList, curDist, swapCount)
		
	#print ("curList", curList)
	#print ("pointList", pointList)
	return (curList, curDist, swapCount)

	

def reverse(pointList, pointDict): 
	curDist = calculateDistance(pointList, pointDict)
	curList = pointList[:]
	swapCount = 0
	for first in range(len(pointList)): 
		for sec in range(first+1, len(pointList)): 
			tempList = pointList[:]
			tempList[first:sec] = tempList[first:sec][::-1]
			dist = calculateDistance(tempList, pointDict)
			#print ("dist", dist)
			if dist < curDist: 
				swapCount += 1
				#print ("here")
				curDist = dist
				curList = tempList[:]
				return (curList, curDist, swapCount)
	#print ("curList", curList)
	#print ("pointList", pointList)
	return (curList, curDist, swapCount)

def shuffle(pointList): 
	random.shuffle(pointList)
	#print (pointList)
	return pointList

def drawPic(pointList, pointDict): 
	arr = np.zeros((600,600))
	arr.fill(255)
	pointPicCoord = {}
	
	radius = int(1)
	(x, y) = pointDict[1]
	maxX = x 
	minX = x
	maxY = y 
	minY = y
	for point in pointDict: 
		(x, y) = pointDict[point]
		if x < minX: 
			minX = x 
		elif x > maxX: 
			maxX = x 
		elif y < minY: 
			minY = y
		elif y > maxY: 
			maxY = y 
	rangeX = maxX -  minX
	rangeY = maxY - minY
	print ("rangeX", rangeX)
	print ("rangeY", rangeY)
	proportX = (600 - 150) / rangeX
	proportY =  (600 - 150)/ rangeY
	for point in pointDict: 
		(x, y) = pointDict[point]
		newX = int ((x - minX) * proportX + 100) 
		newY = 600 - int((y - minY) * proportY + 100)
		print ("x", x)
		print ("y", y)
		#print ("newX", newX) 
		#print ("newY", newY)
		cv2.circle(arr, (newX, newY), radius, 0)
		pointPicCoord[point] = (newX, newY)
	for num in range(len(pointList)): 
		if num < len(pointList) - 1: 
			curPoint = pointList[num]
			nextPoint = pointList[num+1]
		else: 
			curPoint = pointList[num]
			nextPoint = pointList[0]
		print ("list", curPoint)
		(x1, y1) = pointPicCoord[curPoint]
		
		(x2, y2) = pointPicCoord[nextPoint]
		cv2.line(arr, (x1, y1), (x2, y2), 0)
	return arr





(pList, pDict) = readList()
minDist = calculateDistance(pList, pDict)
optList = pList[:] 
swapCount = 0
#pic = drawPic(pList, pDict)


#print (pDict)
#startTime1 = time.clock()
#print ("sup", startTime1)

#print ("here", (time.clock() - startTime1))
#print (order)
#print (dist)

# #print ("initial MindDist", minDist)

# for tri in range(30): 
# 	print ("TrialNumber:" , tri)
# 	shuffled = shuffle(pList)[:]
# 	newList2 = shuffled[:]
# 	for n in range(100):
# 		#print ("here")
# 		(newList, distance, swapC) = swap(newList2, pDict)
# 		#print ("switched swap")
# 		if newList2 == newList: 
# 			newList2 = newList[:]
# 			break
# 		swapCount = swapC
# 		if distance < minDist:
# 			print ("switched swap")
# 			optList = newList[:]
# 			minDist = distance 
# 	for n in range(100):
# 		(newList, curDist, sCount) = reverse(optList, pDict)
# 		if optList == newList: 
# 			break
# 		#print ("reversed")
# 		optList = newList[:]
# 	print (optList)
# 	print (calculateDistance(optList, pDict))

# print (optList)



#newList = [723, 712, 692, 568, 554, 528, 496, 474, 469, 471, 532, 547, 652, 634, 667, 608, 595, 594, 593, 566, 565, 553, 549, 546, 545, 540, 531, 524, 516, 495, 482, 468, 467, 466, 456, 427, 464, 461, 452, 440, 415, 407, 393, 403, 388, 385, 396, 397, 398, 404, 399, 394, 391, 356, 377, 376, 389, 383, 380, 363, 347, 333, 311, 299, 255, 259, 288, 290, 287, 286, 283, 275, 258, 254, 250, 282, 303, 307, 308, 320, 350, 354, 382, 367, 366, 362, 361, 358, 349, 327, 319, 318, 315, 309, 302, 297, 285, 293, 279, 278, 249, 221, 210, 204, 228, 222, 214, 216, 206, 197, 193, 188, 185, 172, 164, 158, 144, 136, 152, 148, 145, 141, 129, 128, 116, 102, 101, 94, 106, 103, 99, 96, 87, 78, 82, 64, 61, 59, 57, 52, 48, 32, 30, 33, 35, 37, 20, 14, 13, 12, 9, 8, 7, 4, 5, 2, 1, 3, 6, 11, 16, 18, 17, 19, 10, 15, 21, 22, 27, 25, 36, 34, 28, 26, 24, 23, 29, 31, 38, 39, 40, 41, 47, 46, 45, 44, 43, 50, 83, 95, 92, 98, 104, 108, 113, 125, 147, 143, 151, 140, 132, 134, 131, 142, 157, 156, 176, 178, 179, 167, 168, 150, 159, 160, 161, 163, 137, 119, 112, 107, 111, 114, 139, 155, 166, 175, 189, 203, 199, 186, 200, 207, 230, 235, 233, 224, 220, 227, 231, 239, 244, 243, 251, 284, 274, 267, 268, 272, 280, 277, 300, 328, 329, 324, 321, 316, 298, 291, 310, 323, 334, 342, 351, 341, 355, 360, 339, 335, 371, 370, 378, 369, 386, 414, 413, 423, 432, 434, 450, 484, 491, 506, 550, 561, 597, 582, 653, 639, 635, 636, 689, 680, 684, 676, 656, 670, 662, 657, 660, 666, 658, 659, 665, 664, 663, 711, 710, 709, 708, 707, 706, 705, 704, 703, 702, 701, 700, 699, 698, 697, 696, 695, 722, 715, 714, 713, 726, 727, 728, 729, 730, 731, 733, 732, 725, 721, 720, 719, 718, 717, 716, 678, 686, 685, 687, 688, 691, 690, 682, 654, 655, 681, 677, 674, 672, 671, 669, 673, 638, 637, 640, 651, 650, 645, 646, 642, 643, 644, 647, 649, 648, 626, 620, 625, 627, 628, 629, 609, 615, 619, 616, 610, 611, 612, 613, 614, 618, 617, 621, 622, 623, 624, 633, 632, 630, 631, 605, 606, 604, 607, 598, 599, 600, 601, 602, 583, 587, 574, 570, 573, 571, 572, 575, 576, 577, 578, 579, 580, 581, 591, 585, 590, 589, 584, 586, 588, 592, 567, 563, 555, 556, 557, 558, 559, 560, 562, 564, 552, 551, 548, 541, 542, 543, 544, 533, 534, 535, 536, 537, 539, 538, 529, 530, 510, 521, 525, 526, 527, 523, 517, 518, 519, 520, 522, 507, 511, 514, 508, 512, 509, 513, 515, 503, 504, 497, 498, 499, 500, 501, 488, 489, 492, 493, 490, 494, 486, 485, 483, 478, 479, 480, 481, 475, 476, 472, 473, 470, 465, 462, 463, 458, 459, 460, 453, 454, 455, 451, 448, 446, 447, 449, 435, 442, 443, 436, 438, 439, 426, 422, 424, 421, 418, 416, 419, 410, 411, 412, 408, 400, 401, 402, 395, 392, 390, 387, 381, 379, 374, 375, 368, 372, 364, 365, 336, 340, 346, 345, 357, 352, 353, 348, 343, 337, 338, 330, 332, 331, 325, 326, 322, 317, 312, 313, 314, 384, 305, 306, 301, 205, 234, 236, 252, 261, 208, 265, 294, 295, 296, 209, 213, 212, 215, 229, 237, 292, 269, 270, 262, 263, 256, 257, 271, 281, 289, 248, 242, 240, 247, 246, 253, 245, 266, 195, 196, 190, 191, 192, 187, 184, 180, 181, 182, 165, 169, 170, 171, 162, 133, 126, 124, 123, 127, 120, 121, 118, 100, 66, 72, 73, 74, 75, 67, 68, 76, 105, 110, 109, 93, 84, 85, 79, 80, 81, 86, 91, 115, 77, 63, 58, 56, 53, 54, 51, 69, 60, 55, 42, 49, 71, 65, 62, 70, 90, 89, 88, 97, 117, 130, 135, 149, 154, 153, 146, 122, 138, 174, 194, 183, 173, 177, 198, 201, 202, 211, 217, 218, 238, 232, 225, 223, 219, 226, 241, 264, 276, 260, 273, 304, 344, 359, 373, 406, 405, 417, 409, 420, 429, 428, 425, 444, 445, 441, 430, 433, 431, 437, 457, 477, 487, 502, 505, 569, 596, 603, 641, 661, 668, 679, 693, 683, 675, 694, 724, 734]
#newList = [12, 15, 10, 8, 4, 5, 7, 2, 1, 3, 6, 11, 22, 18, 16, 27, 47, 80, 81, 86, 91, 115, 93, 84, 85, 79, 77, 109, 110, 118, 133, 127, 182, 181, 192, 215, 263, 270, 281, 246, 256, 257, 247, 213, 209, 229, 240, 242, 248, 271, 314, 357, 402, 379, 421, 449, 463, 472, 483, 473, 481, 501, 515, 520, 522, 519, 513, 509, 518, 527, 544, 539, 543, 551, 559, 558, 536, 523, 576, 585, 591, 614, 623, 633, 632, 622, 618, 613, 630, 602, 572, 567, 537, 535, 498, 499, 508, 493, 479, 485, 494, 500, 490, 504, 526, 517, 512, 476, 460, 455, 412, 443, 426, 419, 454, 462, 480, 470, 465, 453, 459, 447, 446, 451, 448, 439, 438, 411, 424, 395, 381, 401, 372, 387, 384, 374, 375, 353, 348, 338, 337, 322, 325, 326, 289, 313, 317, 295, 296, 262, 269, 292, 253, 237, 212, 196, 184, 171, 170, 187, 195, 191, 190, 180, 169, 165, 162, 105, 123, 124, 121, 120, 100, 95, 83, 66, 41, 44, 50, 56, 53, 54, 63, 67, 72, 73, 74, 75, 76, 68, 58, 45, 46, 36, 25, 21, 19, 17, 23, 24, 26, 28, 34, 40, 39, 43, 51, 69, 92, 98, 126, 147, 143, 125, 132, 134, 140, 151, 161, 163, 168, 179, 167, 178, 176, 156, 160, 157, 142, 137, 131, 113, 104, 108, 119, 112, 107, 111, 114, 117, 130, 135, 149, 166, 175, 155, 139, 150, 159, 200, 224, 239, 244, 231, 227, 220, 205, 234, 236, 252, 208, 245, 266, 265, 261, 306, 294, 312, 343, 331, 352, 365, 390, 392, 410, 418, 416, 422, 436, 442, 435, 408, 368, 364, 340, 336, 330, 332, 301, 280, 272, 268, 267, 274, 284, 277, 305, 335, 346, 345, 371, 400, 378, 370, 369, 360, 339, 328, 329, 321, 324, 316, 342, 351, 386, 414, 413, 423, 432, 450, 434, 457, 477, 487, 502, 505, 484, 491, 525, 521, 506, 510, 529, 563, 550, 561, 583, 587, 598, 626, 649, 662, 647, 574, 620, 638, 625, 627, 628, 629, 609, 605, 570, 555, 573, 592, 599, 606, 615, 619, 631, 640, 643, 624, 616, 610, 604, 588, 586, 564, 548, 552, 541, 534, 533, 538, 530, 507, 486, 475, 458, 478, 497, 511, 503, 488, 492, 489, 514, 542, 556, 560, 557, 575, 579, 584, 589, 580, 590, 621, 612, 617, 611, 601, 600, 578, 571, 562, 581, 577, 607, 637, 642, 650, 664, 665, 671, 659, 663, 655, 646, 645, 644, 651, 654, 666, 672, 658, 687, 691, 697, 678, 685, 688, 696, 695, 701, 702, 703, 700, 706, 707, 714, 717, 713, 710, 704, 705, 708, 709, 715, 721, 720, 719, 718, 731, 730, 728, 729, 733, 732, 727, 726, 725, 722, 716, 711, 699, 686, 690, 698, 682, 674, 681, 660, 669, 657, 677, 673, 689, 680, 684, 670, 676, 656, 648, 636, 635, 639, 653, 597, 582, 569, 596, 603, 641, 661, 668, 679, 693, 683, 675, 694, 724, 734, 723, 712, 692, 652, 634, 667, 595, 540, 516, 482, 531, 545, 546, 553, 565, 594, 608, 593, 549, 495, 467, 468, 461, 464, 452, 440, 415, 403, 388, 393, 385, 361, 358, 349, 362, 366, 398, 397, 396, 407, 466, 456, 471, 524, 566, 532, 547, 554, 568, 528, 496, 474, 469, 441, 430, 433, 437, 431, 417, 405, 406, 373, 383, 380, 377, 376, 409, 389, 356, 391, 394, 399, 404, 420, 429, 428, 445, 425, 444, 427, 382, 367, 354, 350, 307, 320, 308, 299, 311, 333, 347, 363, 359, 344, 355, 341, 334, 323, 310, 291, 298, 300, 243, 251, 235, 233, 230, 207, 199, 186, 189, 203, 226, 241, 264, 276, 304, 273, 260, 238, 255, 259, 288, 287, 290, 286, 283, 275, 258, 254, 250, 282, 303, 315, 327, 319, 318, 302, 297, 293, 285, 278, 309, 279, 249, 221, 210, 204, 214, 228, 222, 216, 188, 172, 158, 164, 185, 193, 197, 206, 198, 201, 144, 136, 116, 102, 128, 129, 141, 145, 148, 152, 177, 173, 202, 211, 217, 218, 232, 225, 223, 219, 194, 183, 174, 154, 153, 146, 138, 122, 106, 101, 94, 87, 99, 103, 96, 78, 64, 82, 97, 88, 61, 59, 48, 35, 32, 30, 33, 37, 52, 57, 70, 89, 90, 71, 65, 62, 49, 42, 55, 60, 38, 31, 29, 20, 14, 9, 13]
#newList =  [3, 6, 11, 22, 18, 16, 27, 47, 80, 81, 86, 91, 115, 93, 84, 85, 79, 77, 109, 110, 118, 133, 127, 182, 181, 192, 215, 263, 270, 281, 246, 256, 257, 247, 213, 209, 229, 240, 242, 248, 271, 314, 357, 402, 379, 421, 449, 463, 472, 483, 473, 481, 501, 515, 520, 522, 519, 513, 509, 518, 527, 544, 539, 543, 551, 559, 558, 536, 523, 576, 585, 591, 614, 623, 633, 632, 622, 618, 613, 630, 602, 572, 567, 537, 535, 498, 499, 508, 493, 479, 485, 494, 500, 490, 504, 526, 517, 512, 476, 460, 455, 412, 443, 426, 419, 454, 462, 480, 470, 465, 453, 459, 447, 446, 451, 448, 439, 438, 411, 424, 395, 381, 401, 372, 387, 384, 374, 375, 353, 348, 338, 337, 322, 325, 326, 289, 313, 317, 295, 296, 262, 269, 292, 253, 237, 212, 196, 184, 171, 170, 187, 195, 191, 190, 180, 169, 165, 162, 105, 123, 124, 121, 120, 100, 95, 83, 66, 41, 44, 50, 56, 53, 54, 63, 67, 72, 73, 74, 75, 76, 68, 58, 45, 46, 36, 25, 21, 19, 17, 23, 24, 26, 28, 34, 40, 39, 43, 51, 69, 92, 98, 126, 147, 143, 125, 132, 134, 140, 151, 161, 163, 168, 179, 167, 178, 176, 156, 160, 157, 142, 137, 131, 113, 104, 108, 119, 112, 107, 111, 114, 117, 130, 135, 149, 166, 175, 155, 139, 150, 159, 200, 224, 239, 244, 231, 227, 220, 205, 234, 236, 252, 208, 245, 266, 265, 261, 306, 294, 312, 343, 331, 352, 365, 390, 392, 410, 418, 416, 422, 436, 442, 435, 408, 368, 364, 340, 336, 330, 332, 301, 280, 272, 268, 267, 274, 284, 277, 305, 335, 346, 345, 371, 400, 378, 370, 369, 360, 339, 328, 329, 321, 324, 316, 342, 351, 386, 414, 413, 423, 432, 450, 434, 457, 477, 487, 502, 505, 484, 491, 525, 521, 506, 510, 529, 563, 550, 561, 583, 587, 598, 626, 649, 662, 647, 574, 620, 638, 625, 627, 628, 629, 609, 605, 570, 555, 573, 592, 599, 606, 615, 619, 631, 640, 643, 624, 616, 610, 604, 588, 586, 564, 548, 552, 541, 534, 533, 538, 530, 507, 486, 475, 458, 478, 497, 511, 503, 488, 492, 489, 514, 542, 556, 560, 557, 575, 579, 584, 589, 580, 590, 621, 612, 617, 611, 601, 600, 578, 571, 562, 581, 577, 607, 637, 642, 650, 664, 665, 671, 659, 663, 655, 646, 645, 644, 651, 654, 666, 672, 658, 687, 691, 697, 678, 685, 688, 696, 695, 701, 702, 703, 700, 706, 707, 714, 717, 713, 710, 704, 705, 708, 709, 715, 721, 720, 719, 718, 731, 730, 728, 729, 733, 732, 727, 726, 725, 722, 716, 711, 699, 686, 690, 698, 682, 674, 681, 660, 669, 657, 677, 673, 689, 680, 684, 670, 676, 656, 648, 636, 635, 639, 653, 597, 582, 569, 596, 603, 641, 661, 668, 679, 693, 683, 675, 694, 724, 734, 723, 712, 692, 652, 634, 667, 595, 540, 516, 482, 531, 545, 546, 553, 565, 594, 608, 593, 549, 495, 467, 468, 461, 464, 452, 440, 415, 403, 388, 393, 385, 361, 358, 349, 362, 366, 398, 397, 396, 407, 466, 456, 471, 524, 566, 532, 547, 554, 568, 528, 496, 474, 469, 441, 430, 433, 437, 431, 417, 405, 406, 373, 383, 380, 377, 376, 409, 389, 356, 391, 394, 399, 404, 420, 429, 428, 445, 425, 444, 427, 382, 367, 354, 350, 307, 320, 308, 299, 311, 333, 347, 363, 359, 344, 355, 341, 334, 323, 310, 291, 298, 300, 243, 251, 235, 233, 230, 207, 199, 186, 189, 203, 226, 241, 264, 276, 304, 273, 260, 238, 255, 259, 288, 287, 290, 286, 283, 275, 258, 254, 250, 282, 303, 315, 327, 319, 318, 302, 297, 293, 285, 278, 309, 279, 249, 221, 210, 204, 214, 228, 222, 216, 188, 172, 158, 164, 185, 193, 197, 206, 198, 201, 144, 136, 116, 102, 128, 129, 141, 145, 148, 152, 177, 173, 202, 211, 217, 218, 232, 225, 223, 219, 194, 183, 174, 154, 153, 146, 138, 122, 106, 101, 94, 87, 99, 103, 96, 78, 64, 82, 97, 88, 61, 59, 48, 35, 32, 30, 33, 37, 52, 57, 70, 89, 90, 71, 65, 62, 49, 42, 55, 60, 38, 31, 29, 20, 14, 9, 13, 12, 15, 10, 8, 4, 5, 7, 2][::-1]
#newList = [1, 2, 7, 5, 4, 8, 10, 15, 12, 13, 9, 14, 20, 29, 31, 38, 60, 55, 42, 49, 62, 65, 71, 90, 89, 70, 57, 52, 37, 33, 30, 32, 35, 48, 59, 61, 88, 97, 82, 64, 78, 96, 103, 99, 87, 94, 101, 106, 122, 138, 146, 153, 154, 174, 183, 194, 219, 223, 225, 232, 218, 217, 211, 202, 173, 177, 152, 148, 145, 141, 129, 128, 102, 116, 136, 144, 201, 198, 206, 197, 193, 185, 164, 158, 172, 188, 216, 222, 228, 214, 204, 210, 221, 249, 279, 309, 278, 285, 293, 297, 302, 318, 319, 327, 315, 303, 282, 250, 254, 258, 275, 283, 260, 273, 304, 276, 264, 241, 226, 203, 189, 186, 199, 207, 230, 233, 235, 251, 243, 300, 298, 291, 310, 323, 334, 341, 355, 344, 359, 363, 347, 333, 311, 299, 308, 320, 307, 350, 354, 367, 382, 427, 444, 425, 445, 428, 429, 420, 404, 399, 394, 391, 356, 389, 409, 376, 377, 380, 383, 373, 406, 405, 417, 431, 437, 433, 430, 441, 469, 474, 496, 528, 568, 554, 547, 532, 566, 524, 471, 456, 466, 407, 396, 397, 398, 366, 362, 349, 358, 361, 385, 393, 388, 403, 415, 440, 452, 464, 461, 468, 467, 495, 549, 593, 608, 594, 565, 553, 546, 545, 531, 482, 516, 540, 595, 667, 634, 652, 692, 712, 723, 734, 724, 694, 675, 683, 693, 679, 668, 661, 641, 603, 596, 569, 582, 597, 653, 639, 635, 636, 648, 656, 676, 670, 684, 680, 689, 673, 677, 657, 669, , 698, 690, 686, 699, 711, 716, 722, 725, 726, 727, 732, 733, 729, 728, 730, 731, 718, 719, 75, 74, 73, 72, 67, 720, 721, 715, 709, 708, 705, 704, 710, 713, 717, 714, 707, 706, 700, 703, 702, 701, 695, 696, 688, 685, 678, 697, 691, 687, 658, 672, 666, 654, 651, 644, 645, 646, 655, 663, 659, 671, 665, 664, 650, 642, 637, 607, 577, 581, 562, 571, 578, 600, 601, 611, 617, 612, 621, 590, 580, 589, 584, 579, 575, 557, 560, 556, 542, 514, 489, 492, 488, 503, 511, 497, 478, 458, 475, 486, 507, 530, 538, 533, 534, 541, 552, 548, 564, 586, 588, 604, 610, 616, 624, 643, 640, 631, 619, 615, 606, 599, 592, 573, 555, 570, 605, 609, 629, 628, 286, 290, 287, 288, 259, 255, 238, 627, 625, 638, 620, 574, 647, 662, 649, 626, 598, 587, 583, 561, 550, 563, 529, 510, 506, 521, 525, 491, 484, 505, 502, 487, 477, 457, 434, 450, 432, 423, 413, 414, 386, 351, 342, 316, 324, 321, 329, 328, 339, 360, 369, 370, 378, 400, 371, 345, 346, 335, 305, 277, 284, 274, 267, 268, 272, 280, 301, 332, 330, 336, 340, 364, 368, 408, 435, 442, 436, 422, 416, 418, 410, 392, 390, 365, 352, 331, 343, 312, 294, 306, 261, 265, 266, 245, 208, 252, 236, 234, 205, 220, 227, 231, 244, 239, 224, 200, 159, 150, 139, 155, 175, 166, 149, 135, 130, 117, 114, 111, 107, 112, 119, 108, 104, 113, 131, 137, 142, 157, 160, 156, 176, 178, 167, 179, 168, 163, 161, 151, 140, 134, 132, 125, 143, 147, 126, 98, 92, 69, 51, 43, 39, 40, 34, 28, 26, 24, 23, 660, 681, 674, 682, 17, 19, 21, 25, 36, 46, 45, 58, 68, 76, 63, 54, 53, 56, 50, 44, 41, 66, 83, 95, 100, 120, 121, 124, 123, 105, 162, 165, 169, 180, 190, 191, 195, 187, 170, 171, 184, 196, 212, 237, 253, 292, 269, 262, 296, 295, 317, 313, 289, 326, 325, 322, 337, 338, 348, 353, 375, 374, 384, 387, 372, 401, 381, 395, 424, 411, 438, 439, 448, 451, 446, 447, 459, 453, 465, 470, 480, 462, 454, 419, 426, 443, 412, 455, 460, 476, 512, 517, 526, 504, 490, 500, 494, 485, 479, 493, 508, 499, 498, 535, 537, 567, 572, 602, 630, 613, 618, 622, 632, 633, 623, 614, 591, 585, 576, 523, 536, 558, 559, 551, 543, 539, 544, 527, 518, 509, 513, 519, 522, 520, 515, 501, 481, 473, 483, 472, 463, 449, 421, 379, 402, 357, 314, 271, 248, 242, 240, 229, 209, 213, 247, 257, 256, 246, 281, 270, 263, 215, 192, 181, 182, 127, 133, 118, 110, 109, 77, 79, 85, 84, 93, 115, 91, 86, 81, 80, 47, 27, 16, 18, 22, 11, 6, 3][:]
newList = [1, 2, 7, 5, 4, 8, 10, 15, 12, 13, 9, 14, 20,90, 89, 70, 57, 225, 232, 218, 217, 211, 202, 173, 177, 152, 148, 145, 141, 129, 128, 102, 116, 136, 144, 201, 198, 206, 197, 193, 185, 164, 158, 172, 188, 216, 222, 228, 214, 204, 210, 221, 249, 279, 309, 278, 285, 293, 297, 302, 318, 319, 327, 315, 303, 282, 250, 254, 258, 275, 283, 286, 290, 287, 288, 259, 255, 238, 260, 273, 304, 276, 264, 241, 226, 203, 189, 186, 199, 207, 230, 233, 235, 251, 243, 300, 298, 291, 310, 323, 334, 341, 355, 344, 359, 363, 347, 333, 311, 299, 308, 320, 307, 350, 354, 367, 382, 427, 444, 425, 445, 428, 429, 420, 404, 399, 394, 391, 356, 389, 409, 376, 377, 380, 383, 373, 406, 405, 417, 431, 437, 433, 430, 441, 469, 474, 496, 528, 568, 554, 547, 532, 566, 524, 471, 456, 466, 407, 396, 397, 398, 366, 362, 349, 358, 361, 385, 393, 388, 403, 415, 440, 452, 464, 461, 468, 467, 495, 549, 593, 608, 594, 565, 553, 546, 545, 531, 482, 516, 540, 595, 667, 634, 652, 692, 712, 723, 734, 724, 694, 675, 683, 693, 679, 668, 661, 641, 603, 596, 569, 582, 597, 653,  29, 31, 52, 37, 33, 30, 32, 35, 48, 59, 61, 88, 97, 82, 64, 78, 96, 103, 99, 87, 94, 101, 106, 122, 138, 146, 153, 154, 174, 183, 194, 219, 223, 38, 60, 55, 42, 49, 62, 65, 71, 639, 635, 636, 648, 656, 676, 670, 684, 680, 689, 673, 677, 657, 669, 660, 681, 674, 682, 698, 690, 686, 699, 711, 716, 722, 725, 726, 727, 732, 733, 729, 728, 730, 731, 718, 719, 720, 721, 715, 709, 708, 705, 704, 710, 713, 717, 714, 707, 706, 700, 703, 702, 701, 695, 696, 688, 685, 678, 697, 691, 687, 658, 672, 666, 654, 651, 644, 645, 646, 655, 663, 659, 671, 665, 664, 650, 642, 637, 607, 577, 581, 562, 571, 578, 600, 601, 611, 617, 612, 621, 590, 580, 589, 584, 579, 575, 557, 560, 556, 542, 514, 489, 492, 488, 503, 511, 497, 478, 458, 475, 486, 507, 530, 538, 533, 534, 541, 552, 548, 564, 586, 588, 604, 610, 616, 624, 643, 640, 631, 619, 615, 606, 599, 592, 573, 555, 570, 605, 609, 629, 628, 627, 625, 638, 620, 574, 647, 662, 649, 626, 598, 587, 583, 561, 550, 563, 529, 510, 506, 521, 525, 491, 484, 505, 502, 487, 477, 457, 434, 450, 432, 423, 413, 414, 386, 351, 342, 316, 324, 321, 329, 328, 339, 360, 369, 370, 378, 400, 371, 345, 346, 335, 305, 277, 284, 274, 267, 268, 272, 280, 301, 332, 330, 336, 340, 364, 368, 408, 435, 442, 436, 422, 416, 418, 410, 392, 390, 365, 352, 331, 343, 312, 294, 306, 261, 265, 266, 245, 208, 252, 236, 234, 205, 220, 227, 231, 244, 239, 224, 200, 159, 150, 139, 155, 175, 166, 149, 135, 130, 117, 114, 111, 107, 112, 119, 108, 104, 113, 131, 137, 142, 157, 160, 156, 176, 178, 167, 179, 168, 163, 161, 151, 140, 134, 132, 125, 143, 147, 126, 98, 92, 69, 51, 43, 39, 40, 34, 28, 26, 24, 23, 17, 19, 21, 25, 36, 46, 45, 58, 68, 76, 75, 74, 73, 72, 67, 63, 54, 53, 56, 50, 44, 41, 66, 83, 95, 100, 120, 121, 124, 123, 105, 162, 165, 169, 170, 171, 184, 196, 212, 237, 253, 292, 269, 262, 296, 295, 317, 313, 289, 326, 325, 322, 337, 338, 348, 353, 375, 374, 384, 387, 372, 401, 381, 395, 424, 411, 438, 439, 448, 451, 446, 447, 459, 453, 465, 470, 480, 462, 454, 419, 426, 443, 412, 455, 460, 476, 512, 517, 526, 504, 490, 500, 494, 485, 479, 493, 508, 499, 498, 535, 537, 567, 572, 602, 630, 613, 618, 622, 632, 180, 190, 191, 195, 187, 633, 623, 614, 591, 585, 576, 523, 536, 192, 181, 182, 127, 558, 559, 551, 543, 539, 544, 527, 518, 509, 513, 519, 522, 520, 515, 501, 481, 473, 483, 472, 463, 449, 421, 379, 402, 357, 314, 271, 248, 242, 240, 229, 209, 213, 247, 257, 256, 246, 281, 270, 263, 215,  133, 118, 110, 109, 77, 79, 85, 84, 93, 115, 91, 86, 81, 80, 47, 27, 16, 18, 22, 11, 6, 3]
newPic = drawPic(newList, pDict)
cv2.imshow('imgWnd', newPic)




print ("MinOrder", newList)
print ("dist", calculateDistance(newList, pDict) )
#print ("distM", minDist)
print ("Run Time", format((time.clock() - startTime)))
cv2.waitKey(0)
cv2.destroyAllWindows()












